### 공통 변수 설정
@email = "user@example.com"
@currentPassword = "Password123!"
@newPassword = "Password123!new"

### 서버 URL 설정 (여기에서 필요한 환경의 주석을 제거하세요)
@SERVER_URL = http://localhost:8080
# @SERVER_URL = http://43.201.69.252:8080

### 회원 가입
POST {{SERVER_URL}}/api/v1/users/signup
Content-Type: application/json

{
  "email": {{email}},
  "password": {{currentPassword}},
  "username": "user1234",
  "phoneNumber": "010-1234-5678",
  "nickname": "CoolUser",
  "role": "CUSTOMER",
  "profileUrl": "http://example.com/profile.jpg",
  "adminToken": ""
}


### 유저 로그인 - 성공
POST {{SERVER_URL}}/auth/v1/users/login
Content-Type: application/json

{
  "email": {{email}},
  "password": {{currentPassword}}
}

### 가변 변수 설정 1
#@jwt_token = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJmM2RhNjlkNS0xYWZlLTRlZmUtODUwZi00N2I5YjNjNzY2NmYiLCJpc3MiOiJhdXRoLXNlcnZpY2UiLCJyb2xlIjoiQ1VTVE9NRVIiLCJleHAiOjE3MjUyNjcxMTIsImlhdCI6MTcyNTI2MzUxMn0.Zx_9bPPuYcgXxYje6snDndnZBdqgK6uEOziAekXQUsM
#@userId = f3da69d5-1afe-4efe-850f-47b9b3c7666f
#@role = CUSTOMER

### 회원 정보 조회
GET {{SERVER_URL}}/api/v1/users/{{userId}}
Authorization: Bearer {{jwt_token}}
X-User-Id: {{userId}}


### 회원 정보 수정
PUT {{SERVER_URL}}/api/v1/users/{{userId}}
Authorization: Bearer {{jwt_token}}
X-User-Id: {{userId}}
Content-Type: application/json

{
  "email": "wonny@example.com",
  "username": "wonny",
  "phoneNumber": "010-1234-5678",
  "nickname": "wonny",
  "role": "MASTER",
  "profileUrl": "http://example.com/wonny.jpg",
  "adminToken": ""
}

### 회원 삭제
DELETE {{SERVER_URL}}/api/v1/users/{{userId}}
Authorization: Bearer {{jwt_token}}
X-User-Id: {{userId}}


### 유저 로그인 - 헤더로만 로그인
POST {{SERVER_URL}}/auth/v1/users/login
Authorization: Bearer {{jwt_token}}


### 유저 로그인
POST {{SERVER_URL}}/auth/v1/users/login
Content-Type: application/json

{
  "email": {{email}},
  "password": {{currentPassword}}
}

> {%
	const response = JSON.parse(response.body);
	client.global.set("jwt_token", response.token);
	client.global.set("userId", response.userId);
	client.global.set("role", response.role);
%}

### 가변 변수 설정 2
@jwt_token = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJmM2RhNjlkNS0xYWZlLTRlZmUtODUwZi00N2I5YjNjNzY2NmYiLCJpc3MiOiJhdXRoLXNlcnZpY2UiLCJyb2xlIjoiTUFTVEVSIiwiZXhwIjoxNzI1MjY5MDY1LCJpYXQiOjE3MjUyNjU0NjV9.bULF9sPrHC29juWAY9gX3rTetXecLslB01d4KkGHook
@userId = f3da69d5-1afe-4efe-850f-47b9b3c7666f
@role = MASTER


### 회원 전체 조회
GET {{SERVER_URL}}/api/v1/users?page=0&size=5&sortBy=createdAt
Authorization: Bearer {{jwt_token}}
X-Role: {{role}}
X-User-Id: {{userId}}

### 회원 키워드 검색
GET {{SERVER_URL}}/api/v1/users/search?page=0&size=4&sortBy=createdAt&keyword=wonny
Authorization: Bearer {{jwt_token}}
X-Role: MASTER
X-User-Id: {{userId}}

### 비밀번호 변경 (실제 비밀번호 변경)
PATCH {{SERVER_URL}}/api/v1/users/change-password
Authorization: Bearer {{jwt_token}}
X-Role: MASTER
X-User-Id: {{userId}}
Content-Type: application/json

{
  "userId": "{{userId}}",
  "currentPassword": {{currentPassword}},
  "newPassword": {{newPassword}}
}


### 유저 로그아웃
POST {{SERVER_URL}}/auth/v1/users/logout
Authorization: Bearer {{jwt_token}}

### Redis 캐시 조회 및 갱신(DB 유저 검증 포함)
GET {{SERVER_URL}}/auth/v1/cache/users/{{userId}}/role

### Redis 캐시 업데이트(DB 유저 검증 미포함)
POST {{SERVER_URL}}/auth/v1/cache/users/{{userId}}/role
Content-Type: application/json

{
  "newRole": "CUSTOMER"
}

### Redis 캐시 삭제(DB 유저 검증 미포함)
DELETE {{SERVER_URL}}/auth/v1/cache/users/{{userId}}/role
