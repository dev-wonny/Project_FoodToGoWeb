name: Deploy to EC2

on:
  push:
    branches:
      - main # 배포할 브랜치 설정.

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Generate application.yml (mono)
        run: |
          cd ./com.foodtogo.mono/src/main/resources
          echo "${{ secrets.MONO_YML }}" > application.yml

      - name: Generate application.yml (auth)
        run: |
          cd ./com.foodtogo.auth/src/main/resources
          echo "${{ secrets.AUTH_YML }}" > application.yml

      - name: Generate application.yml (gateway)
        run: |
          cd ./com.foodtogo.gateway/src/main/resources
          echo "${{ secrets.GW_YML }}" > application.yml
      
      - name: Add EC2 Host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > foodtogo.pem
          chmod 600 foodtogo.pem
          ssh -i foodtogo.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            # 기존 JAR 파일 종료
            for jar in "mono-0.0.1-SNAPSHOT.jar" "auth-0.0.1-SNAPSHOT.jar" "gateway-0.0.1-SNAPSHOT.jar"; do
                PID=$(ps aux | grep "java -jar $jar" | grep -v grep | awk '{print $2}')
                if [ -n "$PID" ]; then
                    echo "Stopping $jar with PID: $PID"
                    kill $PID
                else
                    echo "$jar is not running."
                fi
            done
            
            # 기존 JAR 파일이 있을 경우 삭제
            for jar in "mono-0.0.1-SNAPSHOT.jar" "auth-0.0.1-SNAPSHOT.jar" "gateway-0.0.1-SNAPSHOT.jar"; do
                if [ -f $jar ]; then
                    echo "Deleting $jar"
                    rm $jar
                fi
            done
          EOF

      - name: Build and Deploy JAR files
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > foodtogo.pem
          chmod 600 foodtogo.pem
          for service in "mono" "auth" "gateway"; do
            cd com.foodtogo.$service
            ./gradlew build
            cd build/libs/
            scp -i foodtogo.pem ${service}-0.0.1-SNAPSHOT.jar ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ubuntu/
          done

      - name: Start Applications
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > foodtogo.pem
          chmod 600 foodtogo.pem
          ssh -i foodtogo.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
              nohup java -jar mono-0.0.1-SNAPSHOT.jar > mono-0.0.1-SNAPSHOT.log 2>&1 &
              nohup java -jar auth-0.0.1-SNAPSHOT.jar > auth-0.0.1-SNAPSHOT.log 2>&1 &
              nohup java -jar gateway-0.0.1-SNAPSHOT.jar > gateway-0.0.1-SNAPSHOT.log 2>&1 &
          EOF
