
name: Deploy to EC2

on:
  push:
    branches:
      - main # 배포할 브랜치 설정

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Generate application.yml (mono)
        run: |
          cd ./com.foodtogo.mono/src/main/resources
          echo "${{ secrets.MONO_YML }}" > application.yml

      - name: Generate application.yml (auth)
        run: |
          cd ./com.foodtogo.auth/src/main/resources
          echo "${{ secrets.AUTH_YML }}" > application.yml

      - name: Generate application.yml (gateway)
        run: |
          cd ./com.foodtogo.gateway/src/main/resources
          echo "${{ secrets.GW_YML }}" > application.yml

      - name: Build JAR files mono
        run: |
          cd com.foodtogo.mono && ./gradlew build
      - name: Build JAR files auth
        run: |
          cd com.foodtogo.auth && ./gradlew build
      - name: Build JAR files gw
        run: |
          cd com.foodtogo.gateway && ./gradlew build

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        run: |
          # Gateway
          docker build --platform linux/amd64 -t ttlcc13/foodtogo-gateway:latest ./com.foodtogo.gateway
          docker push ttlcc13/foodtogo-gateway:latest
          
          # Auth
          docker build --platform linux/amd64 -t ttlcc13/foodtogo-auth:latest ./com.foodtogo.auth
          docker push ttlcc13/foodtogo-auth:latest
          
          # Mono
          docker build --platform linux/amd64 -t ttlcc13/foodtogo-mono:latest ./com.foodtogo.mono
          docker push ttlcc13/foodtogo-mono:latest
      - name: Add EC2 Host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
          ssh-keyscan -H ${{ secrets.EC2_HOST_GW }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2 (auth-service, mono-service)
        env:
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
          KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > foodtogo.pem
          chmod 600 foodtogo.pem
          ssh -i foodtogo.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            docker compose -f app-compose.yml down
            docker compose -f app-compose.yml up -d
          EOF

      - name: Deploy to EC2 (gateway-service)
        env:
          HOST: ${{ secrets.EC2_HOST_GW }}
          USER: ${{ secrets.EC2_USER }}
          KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > foodtogo.pem
          chmod 600 foodtogo.pem
          ssh -i foodtogo.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST_GW }} << 'EOF'
            docker compose -f app-compose.yml down
            docker compose -f app-compose.yml up -d
          EOF
